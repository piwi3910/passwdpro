name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: passwdpro_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'server/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./server
        run: npm ci
      
      - name: Generate Prisma client
        working-directory: ./server
        run: npx prisma generate
      
      - name: Run linting
        working-directory: ./server
        run: npm run lint
      
      - name: Run backend tests
        working-directory: ./server
        run: npm test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/passwdpro_test
          JWT_SECRET: test_jwt_secret
          NODE_ENV: test
  
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.x'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        working-directory: ./app
        run: flutter pub get
      
      - name: Verify formatting
        working-directory: ./app
        run: dart format --output=none --set-exit-if-changed .
      
      - name: Analyze project source
        working-directory: ./app
        run: flutter analyze
      
      - name: Run unit tests
        working-directory: ./app
        run: flutter test
  
  integration-tests:
    name: Integration Tests
    runs-on: macos-latest # Using macOS for iOS simulator
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.x'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        working-directory: ./app
        run: flutter pub get
      
      - name: Run integration tests
        working-directory: ./app
        run: flutter test integration_test
  
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.x'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        working-directory: ./app
        run: flutter pub get
      
      - name: Build APK
        working-directory: ./app
        run: flutter build apk --release
      
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: app/build/app/outputs/flutter-apk/app-release.apk
  
  build-ios:
    name: Build iOS IPA
    runs-on: macos-latest
    needs: [backend-tests, frontend-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.x'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        working-directory: ./app
        run: flutter pub get
      
      - name: Build iOS
        working-directory: ./app
        run: flutter build ios --release --no-codesign
  
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.x'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        working-directory: ./app
        run: flutter pub get
      
      - name: Build Web
        working-directory: ./app
        run: flutter build web --release
      
      - name: Upload Web Build
        uses: actions/upload-artifact@v3
        with:
          name: web-release
          path: app/build/web
  
  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: [backend-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'server/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./server
        run: npm ci
      
      - name: Generate Prisma client
        working-directory: ./server
        run: npx prisma generate
      
      - name: Build backend
        working-directory: ./server
        run: npm run build
      
      - name: Upload backend build
        uses: actions/upload-artifact@v3
        with:
          name: server-build
          path: server/dist
  
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
      
      - name: Run npm audit
        working-directory: ./server
        run: npm audit --production
      
      - name: Run Flutter dependency audit
        working-directory: ./app
        run: flutter pub outdated